BSD 3-Clause License
https://github.com/Jidonskii/Javalair/blob/main/BSD%203%20LICENSE

import java.util.Scanner;

public class AdmissionTest2 {
	public static void main(String[] args) {
		Scanner k = new Scanner(System.in);
		System.out.print("Enter the number of countries: ");
		int a = k.nextInt();
		System.out.print("Enter the number of years: ");
		int n = k.nextInt();
		
		// Arrays for country names, years, GDP, GR and Ranking
		String [] names = new String[a];
		int [] years = new int[n];
		double [][] GDP = new double[a][n+1];
		double [] GR = new double[n];
		String [] Ranking = new String[n];
		
		readArray(k, names, years, GDP);
		writeArray(names, Ranking, years, GDP, GR);
	}
	
	public static void readArray(Scanner k, String [] names, int [] years, double [][] GDP) {
		for(int i = 0; i < names.length; i++) {
			System.out.print("Enter the name of country " + (i + 1) + ":");
			names[i] = k.next();
			System.out.println(" ");
			System.out.println(names[i]);
			System.out.println("---------------------------------------------");
			System.out.print("Enter the beginning GDP value:");
			GDP[i][0] = k.nextDouble();
			
			for(int j = 1; j < years.length + 1; j++) {
				System.out.print("Enter the end of year " + j + " GDP value:");
				GDP[i][j] = k.nextDouble();
			}
			System.out.println(" ");
		}
	}
	
	public static void writeArray(String [] names, String [] Ranking, int [] years,
			double [][] GDP, double [] GR) {
		double SD = 0;	// Standard Deviation
		double [] min = new double[names.length]; // Array for the Standard Deviation values
		for(int i = 0; i < names.length; i++) {
			System.out.println("\t\t\t\t" + names[i]);
			System.out.println("------------------------------------------------------------------------");
			System.out.println("Year\t|\tGDP Value\t|\tGrowth Rate\t|\tRanking");
			System.out.println("------------------------------------------------------------------------");
			
			// Calculating the annual growth rates and setting the annual rankings for each country
			for(int j = 0; j < years.length; j++) {
				GR[j] = (GDP[i][j + 1] - GDP[i][j])/GDP[i][j];
				if(GR[j] > 0.25) {
					Ranking[j] = "Exceptional";
				}
				else if(GR[j] > 0 && GR[j] <= 0.25) {
					Ranking[j] = "Good";
				}
				else {
					Ranking[j] = "Poor";
				}
				System.out.printf("%d\t|\t$%,.2f\t|\t%.2f%%\t\t|\t%s\n", 
						(j + 1), (GDP[i][j + 1]), (GR[j] * 100), Ranking[j]);
			}
				
			double sum = 0;
			double power = 1d/years.length;
			double BV = GDP[i][0];
			double EV = GDP[i][years.length];
			double Mean = 0;	// The Mean is also the Average Annual Growth Rate
			double sigma = 0;	// Summation of the squared deviations from the Mean
			for(int k = 0; k < GR.length; k++) {
				sum = sum + GR[k];
			}
			Mean = sum/GR.length;
			for(int l = 0; l < GR.length; l++) {
				sigma = sigma + Math.pow(GR[l] - Mean, 2);
			}
			SD = Math.sqrt(sigma/(GR.length - 1));
			min[i] = SD;
			System.out.printf("Average Annual Growth Rate: %.2f%%\n", (Mean * 100));
			System.out.printf("Compound Annual Growth Rate: %.2f%%\n", 
					((Math.pow((EV/BV),power) - 1) * 100));
			System.out.printf("Standard Deviation: %.3f\n", (SD * 100));
			System.out.println(" ");
		}
		
		System.out.println(" ");
		int n = min.length;
		// Country's name index that is equivalent to that of the minimum Standard Deviation
		int sameIndex = (int)foundIndex(min, getmin(min, n));
		if(getmin(min, n) < 0.25)
			System.out.println("The Country " + names[sameIndex] + "'s economy is most stable");
		if(getmin(min, n) > 0.25)
			System.out.println("The Country " + names[sameIndex] + "'s economy is least risky");
		}

	// Recursion method to find the minimum Standard Deviation value
	public static double getmin(double[] min, int n) {
		if(n == 1)
			return min[0];
		
		return Math.min(min[n-1], getmin(min, n-1));
	}
	
	// Method to determine the index of the minimum Standard Deviation
	public static double foundIndex(double[] min, double m) {
		for(int i = 0; i < min.length; i++) {
			if(min[i] == m) {
				return i;
			}
		}
		return -1;
	}
}
